// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  lists     List[]
  films     Film[]
  votes     Vote[]
}

model List {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  name        String
  description String
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  films       Film[]
}

model Film {
  id                Int      @id @default(autoincrement())
  createdAt         DateTime @default(now())
  title             String   @unique
  original_title    String
  original_language String
  description       String
  poster_path       String
  vote_average      Decimal  @db.Decimal(10, 2)
  country           String
  release_date      String
  list              List?    @relation(fields: [listId], references: [id])
  listId            Int?     
  user              User     @relation(fields: [userId], references: [id])
  userId            Int
  votes             Vote[]

  @@unique([title, listId], name: "title_listId_unique_constraint")
}

model Vote {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  value     Decimal  @db.Decimal(10, 2)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  Film      Film     @relation(fields: [filmId], references: [id], onDelete: Cascade)
  filmId    Int

  @@unique([userId, filmId], name: "user_filmId_unique_constraint")
}
